{"version":3,"sources":["component/AddCategory.jsx","helpers/getGifs.js","component/GifGridItem.jsx","component/GifGrid.jsx","hooks/useFetchGifta.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","console","log","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGif","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifts","item","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qLAqCeA,EAlCK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAECC,mBAAS,IAFV,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAkBnC,OAFAC,QAAQC,IAAI,WAAYL,GAGpB,sBAAMM,SAXY,SAACC,GACnBA,EAAEC,iBAEEN,EAAWO,OAAOC,OAAS,IAC3BV,GAAY,SAAAW,GAAQ,OAAIT,GAAJ,mBAAmBS,OAC3CR,EAAc,MAMd,SACI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SAnBI,SAACP,GACbJ,EAAcI,EAAEQ,OAAOF,a,+BCRlBG,EAAM,uCAAG,WAAML,GAAN,uBAAAM,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUR,GAF9C,+DAGCS,MAAOF,GAHR,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAQD,EAAKE,KAAK,SAAAC,GACpB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAMQ,EAAIG,OAAOC,iBAAiBZ,QAG1Cd,QAAQC,IAAImB,GAbM,kBAcXA,GAdW,4CAAH,sDCaJO,EAXK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAG7B,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAiBA,GAATA,OC4BLO,EA9BC,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECHH,SAACA,GAAa,IAAD,EAEZV,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WACPvB,EAAOL,GACN6B,MAAK,SAAAC,GACLC,YAAW,WACXJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAGb,UAEA,CAACzB,IAEG0B,EDfiBM,CAAchC,GAA/ByB,EAFqB,EAErBA,QAASb,EAFY,EAEZA,KAUhB,OACI,qCACA,6BAAKZ,IACJyB,GAAW,2CACZ,qBAAMJ,UAAU,YAAhB,SAEWT,EAAKE,KAAI,SAACmB,GAAD,OACT,cAAC,EAAD,eAEKA,GADCA,EAAKjB,aEUfkB,EAhCa,WAAM,MAGE5C,mBAAS,CAAC,cAHZ,mBAGvBU,EAHuB,KAGbX,EAHa,KAU9B,OADAI,QAAQC,IAAIL,GAER,gCACI,8CAEA,cAAC,EAAD,CACIA,YAAaA,IAGjB,uBAEA,6BACKW,EAASc,KAAI,SAAAmB,GAAI,OAClB,cAAC,EAAD,CAEIjC,SAAUiC,GADLA,Y,MCtBzBE,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.892aaf42.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategory}) => {\n\n    const [inputValue, setinputValue] = useState('')\n\n    const onChange= (e) =>{\n        setinputValue(e.target.value)\n    }\n\n    const handlerSubmit = (e) =>{\n        e.preventDefault()\n\n        if( inputValue.trim().length > 2 ) {\n            setCategory(category =>[inputValue, ...category])\n        setinputValue('');\n        }\n    }\n    console.log('category', setCategory)\n\n    return (\n        <form onSubmit={handlerSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={onChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategory: PropTypes.func.isRequired\n}\n\n\nexport default AddCategory\n","export const getGif = async(category) =>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=qir9WpFI7q5uC4m2LOx487F43gmMVnCu`\n    const resp = await fetch (url);\n    const {data} = await resp.json();\n\n    const gifts = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url : img.images.downsized_medium.url\n        }\n    })\n    console.log(gifts)\n    return gifts\n    \n    // setImages(gifts)\n}\n","import React from 'react'\n\nconst GifGridItem = ({id, title, url}) => {\n\n   \n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={ url } alt={ title }/>\n            <p key={title}>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifta'\n//import React, { useState, useEffect } from 'react'\n//import { getGif } from '../helpers/getGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n\n    const {loading, data} = useFetchGifts(category);\n\n\n    // const [images, setImages] = useState([]);\n\n    // useEffect(() => {\n    //     getGif( category )\n    //     .then( setImages )\n    // }, [setImages])\n\n    return (\n        <>\n        <h3>{category}</h3>\n        {loading && <p>Loading...</p> }\n        <div  className=\"card-grid\">\n          \n                  {data.map((item)=> (\n                   <GifGridItem \n                    key={item.id}\n                    {...item}\n                    />\n                  ))}  \n                \n        </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\"\nimport { getGif } from \"../helpers/getGifs\"\n\nexport const useFetchGifts = (category) =>{\n    \n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    })\n\n    useEffect(() => {\n       getGif(category)\n       .then(imgs => {\n        setTimeout(() => {\n        setstate({\n            data:imgs,\n            loading:false\n        })\n\n    }, 3000);\n       })\n    }, [category])\n\n    return state // {data[], loading:true}\n    \n}","import React, { useState } from 'react'\nimport AddCategory from './component/AddCategory'\nimport GifGrid from './component/GifGrid'\n\nexport const GifExpertApp = () => {\n    //const categories = ['One Punch', 'Shingeki no Kyojin', 'Chobits'];\n\n    const [category, setCategory] = useState(['One Punch'])\n\n    // const handleAdd = () =>{\n    //     setCategories([...categories, 'DMC'])\n    //     setCategories(categories =>[...categories, 'DMS'])\n    // }\n    console.log(setCategory)\n    return (\n        <div>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory\n                setCategory={setCategory}\n            />\n\n            <hr />\n\n            <ol>\n               { category.map(item => (\n                <GifGrid \n                    key={item} \n                    category={item}\n                />\n               ))\n               }\n            </ol>\n        </div>\n    )\n}\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\n"],"sourceRoot":""}